"use strict";
/**
 * Copyright (c) 2020 Codev Technologies (Pty) Ltd. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgendaJobScheduler = void 0;
class AgendaJobScheduler {
    constructor(agenda) {
        this.agenda = agenda;
    }
    getName() {
        return "AgendaJobScheduler";
    }
    now(jobName, data) {
        return this.agenda.now(jobName, data);
    }
    // https://github.com/agenda/human-interval
    schedule(when, jobName, data) {
        return this.agenda.schedule(when, jobName, data);
    }
    // interval can be a human-readable format String, a cron format String, or a Number
    // options.timezone: should be a string as accepted by moment-timezone and is considered when using an interval in the cron string format.
    // options.skipImmediate: true | false (default) Setting this true will skip the immediate run.The first run will occur only in configured interval.
    every(interval, jobName, data, options) {
        return this.agenda.every(interval, jobName, data, options);
    }
}
exports.AgendaJobScheduler = AgendaJobScheduler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdlbmRhLmpvYi1zY2hlZHVsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29yZS9qb2JzL2FnZW5kYS9hZ2VuZGEuam9iLXNjaGVkdWxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQU1ILE1BQWEsa0JBQWtCO0lBRTNCLFlBQTZCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQzNDLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxvQkFBb0IsQ0FBQztJQUNoQyxDQUFDO0lBRU0sR0FBRyxDQUFDLE9BQWUsRUFBRSxJQUFhO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFDRCwyQ0FBMkM7SUFDcEMsUUFBUSxDQUFDLElBQVksRUFBRSxPQUFlLEVBQUUsSUFBYTtRQUN4RCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUNELG9GQUFvRjtJQUNwRiwwSUFBMEk7SUFDMUksb0pBQW9KO0lBQzdJLEtBQUssQ0FBQyxRQUFnQixFQUFFLE9BQWUsRUFBRSxJQUFhLEVBQUUsT0FBZ0I7UUFDM0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0o7QUF0QkQsZ0RBc0JDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAyMCBDb2RldiBUZWNobm9sb2dpZXMgKFB0eSkgTHRkLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKi9cclxuXHJcbmltcG9ydCBBZ2VuZGEgPSByZXF1aXJlKFwiYWdlbmRhXCIpO1xyXG5pbXBvcnQgeyBJSm9iU2NoZWR1bGVyIH0gZnJvbSBcIi4uL2pvYi1zY2hlZHVsZXIuaW50ZXJmYWNlXCI7XHJcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gXCIuLi8uLi9sb2dnaW5nXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQWdlbmRhSm9iU2NoZWR1bGVyIGltcGxlbWVudHMgSUpvYlNjaGVkdWxlcntcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IocHJvdGVjdGVkIGFnZW5kYTogQWdlbmRhKSB7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldE5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gXCJBZ2VuZGFKb2JTY2hlZHVsZXJcIjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbm93KGpvYk5hbWU6IHN0cmluZywgZGF0YT86IG9iamVjdCk6IFByb21pc2U8QWdlbmRhLkpvYjxvYmplY3Q+PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWdlbmRhLm5vdyhqb2JOYW1lLCBkYXRhKTtcclxuICAgIH1cclxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hZ2VuZGEvaHVtYW4taW50ZXJ2YWxcclxuICAgIHB1YmxpYyBzY2hlZHVsZSh3aGVuOiBzdHJpbmcsIGpvYk5hbWU6IHN0cmluZywgZGF0YT86IG9iamVjdCk6IFByb21pc2U8QWdlbmRhLkpvYjxvYmplY3Q+PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWdlbmRhLnNjaGVkdWxlKHdoZW4sIGpvYk5hbWUsIGRhdGEpO1xyXG4gICAgfVxyXG4gICAgLy8gaW50ZXJ2YWwgY2FuIGJlIGEgaHVtYW4tcmVhZGFibGUgZm9ybWF0IFN0cmluZywgYSBjcm9uIGZvcm1hdCBTdHJpbmcsIG9yIGEgTnVtYmVyXHJcbiAgICAvLyBvcHRpb25zLnRpbWV6b25lOiBzaG91bGQgYmUgYSBzdHJpbmcgYXMgYWNjZXB0ZWQgYnkgbW9tZW50LXRpbWV6b25lIGFuZCBpcyBjb25zaWRlcmVkIHdoZW4gdXNpbmcgYW4gaW50ZXJ2YWwgaW4gdGhlIGNyb24gc3RyaW5nIGZvcm1hdC5cclxuICAgIC8vIG9wdGlvbnMuc2tpcEltbWVkaWF0ZTogdHJ1ZSB8IGZhbHNlIChkZWZhdWx0KSBTZXR0aW5nIHRoaXMgdHJ1ZSB3aWxsIHNraXAgdGhlIGltbWVkaWF0ZSBydW4uVGhlIGZpcnN0IHJ1biB3aWxsIG9jY3VyIG9ubHkgaW4gY29uZmlndXJlZCBpbnRlcnZhbC5cclxuICAgIHB1YmxpYyBldmVyeShpbnRlcnZhbDogc3RyaW5nLCBqb2JOYW1lOiBzdHJpbmcsIGRhdGE/OiBvYmplY3QsIG9wdGlvbnM/OiBvYmplY3QpOiBQcm9taXNlPEFnZW5kYS5Kb2I8b2JqZWN0Pj4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmFnZW5kYS5ldmVyeShpbnRlcnZhbCwgam9iTmFtZSwgZGF0YSwgb3B0aW9ucyk7XHJcbiAgICB9XHJcbn1cclxuIl19