"use strict";
/**
 * Copyright (c) 2020 Codev Technologies (Pty) Ltd. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFvLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb3JlL2Rhby9kYW8uaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjAgQ29kZXYgVGVjaG5vbG9naWVzIChQdHkpIEx0ZC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICovXHJcblxyXG5pbXBvcnQgeyBGaWx0ZXIgfSBmcm9tIFwiLi9maWx0ZXIvZmlsdGVyXCI7XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50cyBkYXRhIGFjY2VzcyBmb3IgYWxsIG1vZGVsIHR5cGVzLlxyXG4gKlxyXG4gKiBAaW50ZXJmYWNlXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIERBTzxUPiB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuIG9iamVjdCBpbiB0aGUgc3lzdGVtXHJcbiAgICAgKiBAYXN5bmNcclxuICAgICAqIEBwYXJhbSAge1R9IG9iamVjdCBUaGUgb2JqZWN0XHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdFxyXG4gICAgICovXHJcbiAgICBjcmVhdGUob2JqZWN0OiBUKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgbXVsdGlwbGUgb2JqZWN0cyBpbiB0aGUgc3lzdGVtXHJcbiAgICAgKiBAYXN5bmNcclxuICAgICAqIEBwYXJhbSAge1RbXX0gb2JqZWN0cyBUaGUgb2JqZWN0c1xyXG4gICAgICogQHJldHVybnMge1Byb21pc2U8VFtdPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdCBhcnJheVxyXG4gICAgICovXHJcbiAgICBjcmVhdGVNYW55KG9iamVjdHM6IFRbXSk6IFByb21pc2U8VFtdPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgYW4gb2JqZWN0XHJcbiAgICAgKiBAYXN5bmNcclxuICAgICAqIEBwYXJhbSAge1R9IG9iamVjdCBPYmplY3QgdG8gdXBkYXRlXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdFxyXG4gICAgICovXHJcbiAgICB1cGRhdGUob2JqZWN0OiBUKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYW4gb2JqZWN0IGlmIGl0IGRvZXNudCBleGlzdCBhbmQgdXBkYXRlcyBhbiBvYmplY3QgaWYgaXQgZG9lcyBleGlzdFxyXG4gICAgICogTk9URTogZXhhbXBsZSBpbnB1dCBbeyBcImF0dHJpYnV0ZTFcIjogXCJ2YWx1ZTFcIiB9LCB7IFwiYXR0cmlidXRlMlwiOiBcInZhbHVlMlwiIH1dXHJcbiAgICAgKiBAYXN5bmNcclxuICAgICAqIEBwYXJhbSBmaWx0ZXJPYmplY3RzIHtmaWx0ZXJQcm9wZXJ0eTpmaWx0ZXJWYWx1ZX1bXSxcclxuICAgICAqIEBwYXJhbSAge1R9IG9iamVjdCBPYmplY3QgdG8gdXBkYXRlXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdFxyXG4gICAgICovXHJcbiAgICAvL3Vwc2VydChmaWx0ZXJPYmplY3RzOiBhbnlbXSwgb2JqZWN0OiBUKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgYW4gb2JqZWN0IGZyb20gdGhlIHN5c3RlbVxyXG4gICAgICogQGFzeW5jXHJcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGlkIElEIGZvciB0aGUgb2JqZWN0IGJlaW5nIGRlbGV0ZWRcclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFVzZXI+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIGRlbGV0ZShpZDogc3RyaW5nKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHJpZXZlcyBhbiBvYmplY3QgYnkgdW5pcXVlIGlkZW50aWZpZXJcclxuICAgICAqIEBhc3luY1xyXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBpZCBJRCB0byBmaW5kIHRoZSBvYmplY3QgYnlcclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFQ+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIGdldEJ5SUQoaWQ6IHN0cmluZyk6IFByb21pc2U8VD47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXRyaWV2ZXMgYWxsIG9iamVjdHNcclxuICAgICAqIEBhc3luY1xyXG4gICAgICogQHJldHVybnMge1Byb21pc2U8VFtdPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdCBhcnJheVxyXG4gICAgICovXHJcbiAgICBnZXRBbGwoKTogUHJvbWlzZTxUW10+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0cmlldmVzIGFuIG9iamVjdCBiYXNlZCBvbiBhIHByb3BlcnR5IGZpbHRlclxyXG4gICAgICogQGFzeW5jXHJcbiAgICAgKiBAcGFyYW0ge0ZpbHRlcn0gZmlsdGVyIFRoZSBmaWx0ZXJcclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFQ+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIGdldEJ5RmlsdGVyKGZpbHRlcjogRmlsdGVyKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHJpZXZlcyBhbiBvYmplY3QgYmFzZWQgb24gYSBwcm9wZXJ0eSBmaWx0ZXJcclxuICAgICAqIEBhc3luY1xyXG4gICAgICogQHBhcmFtIHtGaWx0ZXJ9IGZpbHRlciBUaGUgZmlsdGVyXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUW10+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIGdldEJ5RmlsdGVyQXJyYXkoZmlsdGVyOiBGaWx0ZXIpOiBQcm9taXNlPFRbXT47XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0cmlldmVzIGFuIG9iamVjdCBiYXNlZCBvbiBtdWx0aXBsZSBmaWx0ZXIgY3JpdGVyaWFcclxuICAgICAqIEBhc3luY1xyXG4gICAgICogQHBhcmFtIHtGaWx0ZXJbXX0gZmlsdGVycyBUaGUgZmlsdGVyc1xyXG4gICAgICogQHJldHVybnMge1Byb21pc2U8VD59IFJldHVybnMgYSBwcm9taXNlIGZvciBhbiBvYmplY3RcclxuICAgICAqL1xyXG4gICAgZ2V0QnlGaWx0ZXJzKGZpbHRlcnM6IEZpbHRlcltdKTogUHJvbWlzZTxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHJpZXZlcyBtdWx0aXBsZSBvYmplY3RzIGJhc2VkIG9uIG11bHRpcGxlIGZpbHRlciBjcml0ZXJpYVxyXG4gICAgICogQGFzeW5jXHJcbiAgICAgKiBAcGFyYW0ge0ZpbHRlcltdfSBmaWx0ZXJzIFRoZSBmaWx0ZXJzXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUW10+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0IGFycmF5XHJcbiAgICAgKi9cclxuICAgIGdldE11bHRpcGxlQnlGaWx0ZXJzKGZpbHRlcnM6IEZpbHRlcltdKTogUHJvbWlzZTxUW10+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2VhcmNoZXMgZm9yIG9iamVjdHMuIERlcGVuZHMgb24gaW1wbGVtZW50YXRpb25cclxuICAgICAqIEBhc3luY1xyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0UXVlcnkgVGhlIGlucHV0IHF1ZXJ5IHdpdGggd2hpY2ggdG8gZm9ybSBhIHF1ZXJ5XHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGltaXQgTWF4IG51bWJlciBvZiByZXN1bHRzIHRvIGZldGNoXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxUW10+fSBSZXR1cm5zIGEgcHJvbWlzZSBmb3IgYW4gb2JqZWN0IGFycmF5XHJcbiAgICAgKiBAdGhyb3dzIHtSYW5nZUVycm9yfVxyXG4gICAgICovXHJcbiAgICBzZWFyY2goaW5wdXRRdWVyeTogc3RyaW5nLCBsaW1pdDogbnVtYmVyKTogUHJvbWlzZTxUW10+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2VhcmNoZXMgZm9yIG9iamVjdHMgYmFzZWQgb24gYSBwcm9wZXJ0eVxyXG4gICAgICogQGFzeW5jXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcGVydHkgVGhlIHByb3BlcnR5IGJ5IHdoaWNoIHRvIHNlYXJjaFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSBkZXNpcmVkIHZhbHVlIG9mIHRoZSBwcm9wZXJ0eVxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxpbWl0IE1heCBudW1iZXIgb2YgcmVzdWx0cyB0byBmZXRjaFxyXG4gICAgICogQHJldHVybnMge1Byb21pc2U8VFtdPn0gUmV0dXJucyBhIHByb21pc2UgZm9yIGFuIG9iamVjdCBhcnJheVxyXG4gICAgICogQHRocm93cyB7UmFuZ2VFcnJvcn1cclxuICAgICAqL1xyXG4gICAgc2VhcmNoQnlQcm9wZXJ0eShwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBsaW1pdDogbnVtYmVyKTogUHJvbWlzZTxUW10+O1xyXG59XHJcbiJdfQ==