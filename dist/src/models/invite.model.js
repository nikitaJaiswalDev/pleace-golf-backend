"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Invite = exports.InviteSchema = void 0;
const mongoose = require("mongoose");
const inviteSchema = new mongoose.Schema({
    category: {
        type: String,
    },
    firstName: {
        type: String,
    },
    lastName: {
        type: String,
    },
    type: {
        type: String,
    },
    url: {
        type: String,
        unique: true
    },
    isUsed: {
        type: Boolean,
        default: false
    },
    stageName: {
        type: String
    },
    country: {
        type: String
    },
    usedBy: {
        type: String
    },
    isVerified: {
        type: Boolean
    },
    isSpecialInvitee: {
        type: Boolean,
        default: false
    },
    isDeclined: {
        type: Boolean,
        default: false
    },
    email: {
        type: String
    },
    isInvitedByDirector: {
        type: Boolean,
        default: false
    },
    tournamentId: {
        type: String
    }
}, { timestamps: { createdAt: "createdAt", updatedAt: "updatedAt" } });
exports.InviteSchema = mongoose.model("invite", inviteSchema);
class Invite {
}
exports.Invite = Invite;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52aXRlLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGVscy9pbnZpdGUubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUNBQXFDO0FBR3JDLE1BQU0sWUFBWSxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUNyQyxRQUFRLEVBQUU7UUFDTixJQUFJLEVBQUUsTUFBTTtLQUNmO0lBQ0QsU0FBUyxFQUFFO1FBQ1AsSUFBSSxFQUFFLE1BQU07S0FDZjtJQUNELFFBQVEsRUFBRTtRQUNOLElBQUksRUFBRSxNQUFNO0tBQ2Y7SUFDRCxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsTUFBTTtLQUNmO0lBQ0QsR0FBRyxFQUFFO1FBQ0QsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsSUFBSTtLQUNmO0lBQ0QsTUFBTSxFQUFFO1FBQ0osSUFBSSxFQUFFLE9BQU87UUFDYixPQUFPLEVBQUcsS0FBSztLQUNsQjtJQUNELFNBQVMsRUFBRztRQUNSLElBQUksRUFBQyxNQUFNO0tBQ2Q7SUFDRCxPQUFPLEVBQUc7UUFDTixJQUFJLEVBQUMsTUFBTTtLQUNkO0lBQ0QsTUFBTSxFQUFHO1FBQ0wsSUFBSSxFQUFDLE1BQU07S0FDZDtJQUNELFVBQVUsRUFBRTtRQUNSLElBQUksRUFBRSxPQUFPO0tBQ2hCO0lBQ0QsZ0JBQWdCLEVBQUU7UUFDZCxJQUFJLEVBQUUsT0FBTztRQUNiLE9BQU8sRUFBQyxLQUFLO0tBQ2hCO0lBQ0QsVUFBVSxFQUFFO1FBQ1IsSUFBSSxFQUFFLE9BQU87UUFDYixPQUFPLEVBQUMsS0FBSztLQUNoQjtJQUNELEtBQUssRUFBRztRQUNKLElBQUksRUFBQyxNQUFNO0tBQ2Q7SUFDRCxtQkFBbUIsRUFBRztRQUNsQixJQUFJLEVBQUMsT0FBTztRQUNaLE9BQU8sRUFBQyxLQUFLO0tBQ2hCO0lBQ0QsWUFBWSxFQUFHO1FBQ1gsSUFBSSxFQUFDLE1BQU07S0FDZDtDQUNKLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFMUQsUUFBQSxZQUFZLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBYyxRQUFRLEVBQUMsWUFBWSxDQUFDLENBQUM7QUFHL0UsTUFBYSxNQUFNO0NBaUJsQjtBQWpCRCx3QkFpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuZXhwb3J0IHR5cGUgSW52aXRlTW9kZWwgPSBtb25nb29zZS5Eb2N1bWVudCAmIEludml0ZTtcclxuXHJcbmNvbnN0IGludml0ZVNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gICAgY2F0ZWdvcnk6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB9LFxyXG4gICAgZmlyc3ROYW1lOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgfSxcclxuICAgIGxhc3ROYW1lOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgfSxcclxuICAgIHR5cGU6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB9LFxyXG4gICAgdXJsOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGlzVXNlZDoge1xyXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXHJcbiAgICAgICAgZGVmYXVsdCA6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgc3RhZ2VOYW1lIDoge1xyXG4gICAgICAgIHR5cGU6U3RyaW5nXHJcbiAgICB9LFxyXG4gICAgY291bnRyeSA6IHtcclxuICAgICAgICB0eXBlOlN0cmluZ1xyXG4gICAgfSxcclxuICAgIHVzZWRCeSA6IHtcclxuICAgICAgICB0eXBlOlN0cmluZ1xyXG4gICAgfSxcclxuICAgIGlzVmVyaWZpZWQ6IHtcclxuICAgICAgICB0eXBlOiBCb29sZWFuXHJcbiAgICB9LFxyXG4gICAgaXNTcGVjaWFsSW52aXRlZToge1xyXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXHJcbiAgICAgICAgZGVmYXVsdDpmYWxzZVxyXG4gICAgfSxcclxuICAgIGlzRGVjbGluZWQ6IHtcclxuICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgIGRlZmF1bHQ6ZmFsc2VcclxuICAgIH0sXHJcbiAgICBlbWFpbCA6IHtcclxuICAgICAgICB0eXBlOlN0cmluZ1xyXG4gICAgfSxcclxuICAgIGlzSW52aXRlZEJ5RGlyZWN0b3IgOiB7XHJcbiAgICAgICAgdHlwZTpCb29sZWFuLFxyXG4gICAgICAgIGRlZmF1bHQ6ZmFsc2VcclxuICAgIH0sXHJcbiAgICB0b3VybmFtZW50SWQgOiB7XHJcbiAgICAgICAgdHlwZTpTdHJpbmdcclxuICAgIH1cclxufSwgeyB0aW1lc3RhbXBzOiB7IGNyZWF0ZWRBdDogXCJjcmVhdGVkQXRcIiwgdXBkYXRlZEF0OiBcInVwZGF0ZWRBdFwiIH0gfSk7XHJcblxyXG5leHBvcnQgY29uc3QgSW52aXRlU2NoZW1hID0gbW9uZ29vc2UubW9kZWw8SW52aXRlTW9kZWw+KFwiaW52aXRlXCIsaW52aXRlU2NoZW1hKTtcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgSW52aXRlIHtcclxuICAgIF9pZDogc3RyaW5nO1xyXG4gICAgY2F0ZWdvcnk6IHN0cmluZztcclxuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xyXG4gICAgbGFzdE5hbWUgOiBzdHJpbmc7XHJcbiAgICB0eXBlIDogc3RyaW5nO1xyXG4gICAgdXJsOnN0cmluZztcclxuICAgIGlzVXNlZCA6IGJvb2xlYW47XHJcbiAgICBzdGFnZU5hbWU6c3RyaW5nO1xyXG4gICAgY291bnRyeTpzdHJpbmc7XHJcbiAgICB1c2VkQnk6c3RyaW5nO1xyXG4gICAgaXNWZXJpZmllZDpib29sZWFuO1xyXG4gICAgaXNTcGVjaWFsSW52aXRlZTpib29sZWFuO1xyXG4gICAgc3RhdHVzIDogc3RyaW5nO1xyXG4gICAgZW1haWwgOiBzdHJpbmc7XHJcbiAgICBpc0ludml0ZWRCeURpcmVjdG9yOmJvb2xlYW47XHJcbiAgICB0b3VybmFtZW50SWQ6c3RyaW5nO1xyXG59Il19