"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GolfClubSchema = void 0;
const mongoose = require("mongoose");
const golf_club_membership_enum_1 = require("../types/golf-club-membership.enum");
const GolfClubChampsSchema = new mongoose.Schema({
    teeId: {
        type: String
    },
    name: {
        type: String
    },
    gender: {
        type: String
    },
    r1: {
        type: Number
    },
    r2: {
        type: Number
    },
    r3: {
        type: Number
    },
    r4: {
        type: Number
    },
    bestCR: {
        type: Number
    },
    date: {
        type: Date
    },
    CR: {
        type: Number
    },
    bestScore: {
        type: Number
    }
});
const golfClubSchema = new mongoose.Schema({
    _id: mongoose.Schema.Types.ObjectId,
    code: {
        type: String,
        required: true,
        unique: true
    },
    name: {
        type: String,
        required: true,
        unique: true
    },
    membership: {
        type: golf_club_membership_enum_1.GolfClubMembership,
        required: true
    },
    numberOfHoles: {
        type: Number,
        required: true
    },
    //  Alpha2 or subdivision code
    countryCode: {
        type: String,
        required: true
    },
    phone: {
        type: String
    },
    email: {
        type: String
    },
    website: {
        type: String
    },
    contactName: {
        type: String
    },
    state: {
        type: String
    },
    city: {
        type: String
    },
    status: {
        type: Boolean
    },
    menChamp: {
        type: GolfClubChampsSchema
    },
    ladiesChamp: {
        type: GolfClubChampsSchema
    }
}, { timestamps: { createdAt: "createdAt", updatedAt: "updatedAt" } });
exports.GolfClubSchema = mongoose.model("GolfClub", golfClubSchema);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29sZi1jbHViLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZGVscy9nb2xmLWNsdWIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUNBQXFDO0FBR3JDLGtGQUF3RTtBQUl4RSxNQUFNLG9CQUFvQixHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUM3QyxLQUFLLEVBQUU7UUFDSCxJQUFJLEVBQUcsTUFBTTtLQUNoQjtJQUNELElBQUksRUFBRTtRQUNGLElBQUksRUFBRyxNQUFNO0tBQ2hCO0lBQ0QsTUFBTSxFQUFFO1FBQ0osSUFBSSxFQUFHLE1BQU07S0FDaEI7SUFDRCxFQUFFLEVBQUU7UUFDQSxJQUFJLEVBQUcsTUFBTTtLQUNoQjtJQUNELEVBQUUsRUFBRTtRQUNBLElBQUksRUFBRyxNQUFNO0tBQ2hCO0lBQ0QsRUFBRSxFQUFFO1FBQ0EsSUFBSSxFQUFHLE1BQU07S0FDaEI7SUFDRCxFQUFFLEVBQUU7UUFDQSxJQUFJLEVBQUcsTUFBTTtLQUNoQjtJQUNELE1BQU0sRUFBRztRQUNMLElBQUksRUFBRyxNQUFNO0tBQ2hCO0lBQ0QsSUFBSSxFQUFHO1FBQ0gsSUFBSSxFQUFHLElBQUk7S0FDZDtJQUNELEVBQUUsRUFBRztRQUNELElBQUksRUFBRSxNQUFNO0tBQ2Y7SUFDRCxTQUFTLEVBQUc7UUFDUixJQUFJLEVBQUUsTUFBTTtLQUNmO0NBQ0osQ0FBQyxDQUFDO0FBRUgsTUFBTSxjQUFjLEdBQUcsSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDO0lBQ3ZDLEdBQUcsRUFBRSxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRO0lBQ25DLElBQUksRUFBRTtRQUNGLElBQUksRUFBRSxNQUFNO1FBQ1osUUFBUSxFQUFFLElBQUk7UUFDZCxNQUFNLEVBQUUsSUFBSTtLQUNmO0lBQ0QsSUFBSSxFQUFFO1FBQ0YsSUFBSSxFQUFFLE1BQU07UUFDWixRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRSxJQUFJO0tBQ2Y7SUFDRCxVQUFVLEVBQUU7UUFDUixJQUFJLEVBQUUsOENBQWtCO1FBQ3hCLFFBQVEsRUFBRSxJQUFJO0tBQ2pCO0lBQ0QsYUFBYSxFQUFFO1FBQ1gsSUFBSSxFQUFFLE1BQU07UUFDWixRQUFRLEVBQUUsSUFBSTtLQUNqQjtJQUNELDhCQUE4QjtJQUM5QixXQUFXLEVBQUU7UUFDVCxJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxJQUFJO0tBQ2pCO0lBQ0QsS0FBSyxFQUFFO1FBQ0gsSUFBSSxFQUFFLE1BQU07S0FDZjtJQUNELEtBQUssRUFBRTtRQUNILElBQUksRUFBRSxNQUFNO0tBQ2Y7SUFDRCxPQUFPLEVBQUU7UUFDTCxJQUFJLEVBQUUsTUFBTTtLQUNmO0lBQ0QsV0FBVyxFQUFFO1FBQ1QsSUFBSSxFQUFFLE1BQU07S0FDZjtJQUNELEtBQUssRUFBRTtRQUNILElBQUksRUFBRSxNQUFNO0tBQ2Y7SUFDRCxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsTUFBTTtLQUNmO0lBQ0QsTUFBTSxFQUFFO1FBQ0osSUFBSSxFQUFFLE9BQU87S0FDaEI7SUFDRCxRQUFRLEVBQUc7UUFDUCxJQUFJLEVBQUcsb0JBQW9CO0tBQzlCO0lBQ0QsV0FBVyxFQUFHO1FBQ1YsSUFBSSxFQUFHLG9CQUFvQjtLQUM5QjtDQUNKLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFMUQsUUFBQSxjQUFjLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBZ0IsVUFBVSxFQUFFLGNBQWMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCB7IEdvbGZDbHViIH0gZnJvbSBcIi4uL3R5cGVzL2dvbGYtY2x1YlwiO1xyXG5pbXBvcnQgeyBHb2xmQ2x1YkNoYW1wcyB9IGZyb20gXCIuLi90eXBlcy9nb2xmLWNsdWItY2hhbXBzXCI7XHJcbmltcG9ydCB7IEdvbGZDbHViTWVtYmVyc2hpcCB9IGZyb20gXCIuLi90eXBlcy9nb2xmLWNsdWItbWVtYmVyc2hpcC5lbnVtXCI7XHJcblxyXG5leHBvcnQgdHlwZSBHb2xmQ2x1Yk1vZGVsID0gbW9uZ29vc2UuRG9jdW1lbnQgJiBHb2xmQ2x1YjtcclxuXHJcbmNvbnN0IEdvbGZDbHViQ2hhbXBzU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICB0ZWVJZDoge1xyXG4gICAgICAgIHR5cGUgOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICBuYW1lOiB7XHJcbiAgICAgICAgdHlwZSA6IFN0cmluZ1xyXG4gICAgfSxcclxuICAgIGdlbmRlcjoge1xyXG4gICAgICAgIHR5cGUgOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICByMToge1xyXG4gICAgICAgIHR5cGUgOiBOdW1iZXJcclxuICAgIH0sXHJcbiAgICByMjoge1xyXG4gICAgICAgIHR5cGUgOiBOdW1iZXJcclxuICAgIH0sXHJcbiAgICByMzoge1xyXG4gICAgICAgIHR5cGUgOiBOdW1iZXJcclxuICAgIH0sXHJcbiAgICByNDoge1xyXG4gICAgICAgIHR5cGUgOiBOdW1iZXJcclxuICAgIH0sXHJcbiAgICBiZXN0Q1IgOiB7XHJcbiAgICAgICAgdHlwZSA6IE51bWJlclxyXG4gICAgfSxcclxuICAgIGRhdGUgOiB7XHJcbiAgICAgICAgdHlwZSA6IERhdGVcclxuICAgIH0sXHJcbiAgICBDUiA6IHtcclxuICAgICAgICB0eXBlOiBOdW1iZXJcclxuICAgIH0sXHJcbiAgICBiZXN0U2NvcmUgOiB7XHJcbiAgICAgICAgdHlwZTogTnVtYmVyXHJcbiAgICB9XHJcbn0pO1xyXG5cclxuY29uc3QgZ29sZkNsdWJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICAgIF9pZDogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgY29kZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICB1bmlxdWU6IHRydWVcclxuICAgIH0sXHJcbiAgICBuYW1lOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIG1lbWJlcnNoaXA6IHtcclxuICAgICAgICB0eXBlOiBHb2xmQ2x1Yk1lbWJlcnNoaXAsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBudW1iZXJPZkhvbGVzOiB7XHJcbiAgICAgICAgdHlwZTogTnVtYmVyLFxyXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgLy8gIEFscGhhMiBvciBzdWJkaXZpc2lvbiBjb2RlXHJcbiAgICBjb3VudHJ5Q29kZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIHBob25lOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgZW1haWw6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICB3ZWJzaXRlOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nXHJcbiAgICB9LFxyXG4gICAgY29udGFjdE5hbWU6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICBzdGF0ZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZ1xyXG4gICAgfSxcclxuICAgIGNpdHk6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmdcclxuICAgIH0sXHJcbiAgICBzdGF0dXM6IHtcclxuICAgICAgICB0eXBlOiBCb29sZWFuXHJcbiAgICB9LFxyXG4gICAgbWVuQ2hhbXAgOiB7XHJcbiAgICAgICAgdHlwZSA6IEdvbGZDbHViQ2hhbXBzU2NoZW1hXHJcbiAgICB9LFxyXG4gICAgbGFkaWVzQ2hhbXAgOiB7XHJcbiAgICAgICAgdHlwZSA6IEdvbGZDbHViQ2hhbXBzU2NoZW1hXHJcbiAgICB9XHJcbn0sIHsgdGltZXN0YW1wczogeyBjcmVhdGVkQXQ6IFwiY3JlYXRlZEF0XCIsIHVwZGF0ZWRBdDogXCJ1cGRhdGVkQXRcIiB9IH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdvbGZDbHViU2NoZW1hID0gbW9uZ29vc2UubW9kZWw8R29sZkNsdWJNb2RlbD4oXCJHb2xmQ2x1YlwiLCBnb2xmQ2x1YlNjaGVtYSk7XHJcblxyXG5cclxuIl19