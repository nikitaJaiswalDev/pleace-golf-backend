"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GolfCourseSchema = void 0;
const mongoose = require("mongoose");
const golf_course_type_enum_1 = require("../types/golf-course-type.enum");
const gender_enum_1 = require("../types/gender.enum");
const golfTeeSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true
    },
    gender: {
        type: gender_enum_1.Gender,
        required: true
    },
    courseRating: {
        type: Number,
        required: true
    },
    slopeRating: {
        type: Number,
        required: true
    },
    par: {
        type: Number,
        required: true
    },
    holes: [
        {
            hole: {
                type: Number,
                required: true
            },
            par: {
                type: Number,
                required: true
            }
        }
    ],
    userCourseRating: {
        type: Number
    },
    courseRatings: [
        {
            course: {
                type: Number
            },
            clubHouse: {
                type: Number
            },
            proShop: {
                type: Number
            },
            training: {
                type: Number
            },
            services: {
                type: Number
            },
            reviewComments: {
                type: String
            },
            userId: {
                type: mongoose.Schema.Types.ObjectId,
                ref: 'User'
            }
        }
    ]
});
const golfCourseSchema = new mongoose.Schema({
    _id: mongoose.Schema.Types.ObjectId,
    code: {
        type: String,
        required: true,
        unique: true
    },
    clubId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'GolfClub',
        required: true
    },
    name: {
        type: String,
        required: true,
        unique: true
    },
    numberOfHoles: {
        type: Number,
        required: true
    },
    par: {
        type: Number
    },
    type: {
        type: golf_course_type_enum_1.GolfCourseType,
        required: true
    },
    slope: {
        type: Number
    },
    rating: {
        type: Number
    },
    length: {
        type: Number
    },
    tees: [
        golfTeeSchema
    ],
    status: {
        type: Boolean,
        default: true
    },
    userCourseRating: {
        type: Number,
        default: 0
    },
    courseRatings: [
        {
            course: {
                type: Number
            },
            clubHouse: {
                type: Number
            },
            proShop: {
                type: Number
            },
            training: {
                type: Number
            },
            services: {
                type: Number
            },
            ratingAvg: {
                type: Number
            },
            reviewComments: {
                type: String
            },
            userId: {
                type: mongoose.Schema.Types.ObjectId,
                ref: 'User'
            }
        }
    ]
}, { timestamps: { createdAt: "createdAt", updatedAt: "updatedAt" } });
exports.GolfCourseSchema = mongoose.model("GolfCourse", golfCourseSchema);
//# sourceMappingURL=data:application/json;base64,